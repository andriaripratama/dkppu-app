@model DKUPPU.ViewModels.UserApprovalViewModel
@{
    ViewBag.Title = "MyProfile";
}

<div class="jarviswidget jarviswidget-sortable" data-widget-editbutton="false" data-widget-colorbutton="false" role="widget">
    <header>
        <span class="widget-icon"><i class="fa fa-eye"></i></span>
        <h2>My Profile </h2>
        <span class="jarviswidget-loader">
            <i class="fa fa-refresh fa-spin"></i>
        </span>
    </header>
    <div role="content">
        <div class="jarviswidget-editbox"> </div>
        <div class="widget-body">
            @Html.Partial("_UserView", Model)
            <br />
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
            {
                <fieldset>
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.username)
                    @Html.HiddenFor(model => model.full_name)
                    @Html.HiddenFor(model => model.email)

                    <legend>Role Assignment : </legend>
                    <div class="row">
                        <div class="col-md-12">
                            <table class="table table-striped">
                                <tr>
                                    <th class="col-md-2">
                                        @Html.LabelFor(model => model.id_role, new { @class = "col-md-2 control-label text-left" })
                                    </th>
                                    <th width="3">:</th>
                                    <td>
                                        @Html.DropDownListFor(model => model.id_role, (IEnumerable<SelectListItem>)ViewBag.IdRole, "Select Role", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.id_role, null, new { @class = "text-danger" })
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>

                    <div class="form-actions">
                        <input class="btn btn-primary" type="submit" id="btn_approved" name="approved" value="Approved" disabled="disabled">
                        <a href="#" class="btn btn-warning" data-target="#modal-revise-user" data-toggle="modal">Revise</a>
                        <a class="btn btn-danger" href="@Url.Action("ListUserApproval","Account")">Cancel</a>
                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>
<div id="modal-revise-user" class="modal fade" aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("UserApproval", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <button class="close" aria-hidden="true" data-dismiss="modal" type="button"> <i class="fa fa-remove"></i> </button>
                    <h4>Revise User</h4>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.username)
                            @Html.HiddenFor(model => model.full_name)
                            @Html.HiddenFor(model => model.email)
                            <div class="col-md-12">
                                @Html.TextArea("revise_note", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <input class="btn btn-primary" type="submit" id="btn_approved" name="approved" value="Revise">
                    <a role="button" id="btn-checkout-cancel" class="btn btn-danger" aria-hidden="true" data-dismiss="modal">Cancel</a>
                </div>
            }
        </div>
        <div id="submit-loader"></div>
    </div>
</div>
@section Scripts{
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(function () {
        $('.date-picker').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
        });

        $("#id_role").change(function () {
            var val = $(this).val();
            
            if (val != '') 
                $("input[value*='Approved']").removeAttr('disabled');
            else
                $("input[value*='Approved']").attr('disabled', 'disabled');
        });

        $("#org_type").change(function () {
            var org_type = $(this).val();
            $.ajax({
                url: '@Url.Action("GetOrganizationByType","AJAX")',
                data: { org_type: org_type },
                dataType: 'json',
                success: function (data) {
                    $("#id_org").empty();
                    $("#id_org").append("<option value=''>Select Organization Name</option>");
                    $.each(data, function (index, item) {
                        $("#id_org").append("<option value='" + item.id_lookup + "'>" + item.lookup_value + "</option>");
                    });
                },
            });
        });

        $("#id_nationality").change(function () {
            var id_country = $(this).val();
            $.ajax({
                // id indonesia => 1372CDDB-5FDB-4237-9980-25C01BB7D0BD
                url: '@Url.Action("GetAllStateByCountryId", "AJAX")',
                data: { id_country: id_country },
                dataType: 'json',
                success: function (data) {
                    $("#id_state").empty();
                    $("#id_state").append("<option value=''>Select State</option>");
                    $.each(data, function (index, item) {
                        $("#id_state").append("<option value='" + item.id_state + "'>" + item.state_name + "</option>");
                    });

                    if (id_country == '1372CDDB-5FDB-4237-9980-25C01BB7D0BD') {
                        $("#id-loc-1").show();
                        $("#id-loc-2").show();
                        $("#id-loc-3").show();
                    }
                    else {
                        $("#id-loc-1").hide();
                        $("#id-loc-2").hide();
                        $("#id-loc-3").hide();
                    }
                },
            });
        });

        $("#id_state").change(function () {
            var id_state = $(this).val();
            $.ajax({
                url: '@Url.Action("GetAllDistricByStateId", "AJAX")',
                data: { id_state: id_state },
                dataType: 'json',
                success: function (data) {
                    $("#id_district").empty();
                    $("#id_district").append("<option value=''>Select District</option>");
                    $.each(data, function (index, item) {
                        $("#id_district").append("<option value='" + item.id_district + "'>" + item.district_name + "</option>");
                    });
                },
            });
        });

        $("#id_district").change(function () {
            var id_district = $(this).val();
            $.ajax({
                url: '@Url.Action("GetAllSubDistricByDistricId", "AJAX")',
                data: { id_district: id_district },
                dataType: 'json',
                success: function (data) {
                    $("#id_subdist").empty();
                    $("#id_subdist").append("<option value=''>Select Sub District</option>");
                    $.each(data, function (index, item) {
                        $("#id_subdist").append("<option value='" + item.id_subdist + "'>" + item.subdist_name + "</option>");
                    });
                },
            });
        });

        $("#id_subdist").change(function () {
            var id_subdist = $(this).val();
            $.ajax({
                url: '@Url.Action("GetAllVillageBySubdiscId", "AJAX")',
                data: { id_subdist: id_subdist },
                dataType: 'json',
                success: function (data) {
                    $("#id_village").empty();
                    $("#id_village").append("<option value=''>Select Village</option>");
                    $.each(data, function (index, item) {
                        $("#id_village").append("<option value='" + item.id_village + "'>" + item.village_name + "</option>");
                    });
                },
            });
        });

        //validasi file type
        $('input[type="file"]').on("change", function () {
            if (FileValidation($(this))) {
                FileSize($(this));
            }
        });

        function FileValidation(object) {
            var IsValid = true;
            $(object).parent().find('span').remove();
            $(object).parent().parent().removeClass('has-error');
            $(object).parent().parent().removeClass('has-success');

            var allowedExtensions = ["jpg", "pdf", "png"];

            var value = $(object).val(),
                        file = value.toLowerCase(),
                        extension = file.substring(file.lastIndexOf('.') + 1);
            if ($(object).val().length > 0) {
                if ($.inArray(extension, allowedExtensions) == -1) {
                    $(object).after('<span class="help-block">Invalid File. Please upload a File with extension: ' + allowedExtensions.join(", ") + '</span>');
                    $(object).parent().parent().addClass('has-error');
                    IsValid = false;
                } else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        // validasi file size document upload
        function FileSize(object) {
            var IsValid = true;
            if ($(object).val().length > 0) {
                $(object).parent().find('span').remove();
                $(object).parent().removeClass('has-error');
                $(object).parent().removeClass('has-success');
                var file = $(object)[0].files[0];
                var maxFileSize = $('#DocUploadFormFileSize').val();

                if (file.size > parseInt(maxFileSize) || file.FileSize > parseInt(maxFileSize)) {
                    $(object).after('<span class="help-block">The file size to big</span>');
                    $(object).parent().addClass('has-error');
                    IsValid = false;
                } else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        function MustNumber(object) {
            var IsValid = true;
            var numericReg = /^\d*[0-9](|.\d*[0-9]|,\d*[0-9])?$/;
            var value = $(object).val();
            if (value.length > 0) {
                $(object).parent().find('span').remove();
                $(object).parent().removeClass('has-error');
                $(object).parent().removeClass('has-success');

                if (!numericReg.test(value)) {
                    $(object).after('<span class="help-block">Numeric characters only.</span>');
                    $(object).parent().addClass('has-error');
                    IsValid = false;
                }
                else {
                    var value = parseInt(value);
                    $(object).val(value);
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        function IsRequired(object) {
            var IsValid = false;
            $(object).parent().find('span').remove();
            $(object).parent().removeClass('has-error');
            $(object).parent().removeClass('has-success');
            var value = $(object).val();
            if (value.length <= 0) {
                $(object).after('<span class="help-block">Is required.</span>');
                $(object).parent().addClass('has-error');
                IsValid = false;
            }
            else {
                $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                $(object).parent().addClass('has-success');
                IsValid = true;
            }
            return IsValid;
        }
    });
</script>
}
