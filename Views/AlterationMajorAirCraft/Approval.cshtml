@model DKUPPU.ViewModels.AlterationMajorApprovalViewModel
@{
    ViewBag.Title = "";
    ViewBag.License_no = "";
    ViewBag.activity_id = "";

}

<div class="jarviswidget jarviswidget-sortable" data-widget-editbutton="false" data-widget-colorbutton="false" role="widget">
    <header>
        <span class="widget-icon"><i class="fa fa-eye"></i></span>
        <h2>Approval Form</h2>
        <span class="jarviswidget-loader">
            <i class="fa fa-refresh fa-spin"></i>
        </span>
    </header>
    <div role="content">
        <div class="jarviswidget-editbox"> </div>
        <div class="widget-body">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
            <!--Data Aircraft Begin-->
                <fieldset>
                    <div class="form-group">
                        @Html.Partial("../MstRegisterForm/_DataAircraftForm", Model.Organization)
                    </div>
                </fieldset>

                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.registration_number)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.registration_number, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.aircraft_type)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.aircraft_type, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.registration_marks)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.registration_marks, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.serial_number)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.serial_number, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.applicant_mod_no)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.applicant_mod_no, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.design_responsibility)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.design_responsibility, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.brief_description_of_modification)
                        </label>
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.AlterationMajorRegisterViewModel.brief_description_of_modification, new { @class = "form-control required-value", @cols = 55, @rows = 4 })
                        </div>
                    </div>
                    <fieldset>
                        <legend>
                            Foreign Authority Approval Reference(if any)
                        </legend>
                    </fieldset>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.approval_number)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.approval_number, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.date_foreign)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.date_foreign, new { htmlAttributes = new { @class = "form-control required-value date-picker" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.classification)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.classification, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                    </div>
                    <fieldset>
                        <legend>
                           Applicant Information
                        </legend>
                    </fieldset>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.place)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.place, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.date)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.date, new { htmlAttributes = new { @class = "form-control required-value date-picker" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.position)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.position, new { htmlAttributes = new { @class = "form-control required-value date-picker" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label text-left">
                            @Html.LabelFor(model => model.AlterationMajorRegisterViewModel.phone_number)
                        </label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AlterationMajorRegisterViewModel.phone_number, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                    </div>

                    <fieldset>
                        <legend>Notes</legend>
                        <div class="row">
                            <div class="col-xs-12">
                                @Html.TextAreaFor(model => model.Notes, new { @Class = "from-control col-xs-12" })
                            </div>
                        </div>
                    </fieldset>
                    <fieldset>
                        <legend>Logs</legend>
                        <div class="row">
                            <div class="col-xs-12">
                                @Html.Partial("../MstApprovalForm/_LogNotesForm", Model.TrxLicenseNotesViewModel)
                            </div>
                        </div>
                    </fieldset>

                    <div class="form-actions">
                        @if (ViewBag.WFActions != null)
                        {
                            string disabled = "";
                            if (Model.wf_activity_name == "ACT04" || Model.wf_activity_name == "ACT01" || Model.wf_activity_name == "ACT02")
                            {
                                disabled = "disabled";
                            }
                            foreach (DKUPPU.Helpers.WorkflowAction action in ViewBag.WFActions as List<DKUPPU.Helpers.WorkflowAction>)
                            {
                                if (action.kode == null)
                                {
                                    <a class="btn btn-primary" name="action_@action.kode" id="action_@action.kode">@action.name</a>
                                }
                                else
                                {
                                    <input class="btn btn-primary @disabled" type="submit" name="action_@action.kode" id="action_@action.kode" value="@action.name" />
                                }
                            }
                        }
                        <a href="@Url.Action("Index","Home")" class="btn btn-default"> Back </a>
                    </div>

                </div>
            }
        </div>
    </div>
</div>

@if (Model.wf_activity_name == "ACT04")
{
    <script>
        $(function () {
            $('#action_').click(function () {
                $('#action_Y').attr('data-submit', 'true');
                $('#action_Y').removeClass('disabled');
            });

            $('form').submit(function () {
                var isValid = $('#action_Y').attr('data-submit');
                if (isValid == 'false') {
                    return false;
                }
            });
        });
    </script>
}
@if (Model.wf_activity_name == "ACT01" || Model.wf_activity_name == "ACT02")
{
    <script>
        $(function () {
            CheckingDoc();

            $('.satisfied').click(function () {
                CheckingDoc();
            });
            $('.un-satisfied').click(function () {
                CheckingDoc();
            });
            function CheckingDoc() {
                var IsValid = false;
                var lengthSatisfied = $('.satisfied').length;
                var lengthSatisfiedChecked = $('.satisfied:checked').length;
                //var lengthUnSatisfied = $('.un-satisfied').length;
                var lengthUnSatisfiedChecked = $('.un-satisfied:checked').length;
                if (lengthSatisfiedChecked == lengthSatisfied) {
                    enebelButtonProcesed();
                }
                else if (((lengthUnSatisfiedChecked + lengthSatisfiedChecked) == lengthSatisfied) && lengthUnSatisfiedChecked > 0) {
                    enebelButtonRevise();
                }
                else {
                    DesableAll();
                }
            }

            function enebelButtonProcesed() {
                $('#action_Y').removeClass('disabled');
                $('#action_R').addClass('disabled');
                $('#action_N').addClass('disabled');
            }
            function DesableAll() {
                $('#action_Y').addClass('disabled');
                $('#action_R').addClass('disabled');
                $('#action_N').addClass('disabled');
            }
            function enebelButtonRevise() {
                $('#action_Y').addClass('disabled');
                $('#action_R').removeClass('disabled');
                $('#action_N').removeClass('disabled');
            }
        })
    </script>
}

@if (ViewBag.CheckingRegNo == true)
{
    <script>
        $(function () {

        });
    </script>
}

@if (Model.wf_activity_name == "ACT01")
{
    <script>
        $(function () {

            //** Validasi form
            $('form').submit(function () {
                //return false;
                var hasError = 0;
                $form = $('form:first');

                //validasi is required
                $.each($form.find('.required-value'), function (i, val) {
                    if (!IsRequired($(this))) {
                        hasError = hasError + 1;
                    }
                });

                //validasi date form - until
                if (!FromUntilValidate()) {
                    hasError = hasError + 1;
                }

                //if hasError has value more than 0 that return false
                if (hasError > 0) {
                    return false;
                }
                //return false;
            });

            //validasi is required
            $('.required-value').keyup(function () {
                IsRequired($(this));
            });

            $('.required-value.date-picker').change(function () {
                IsRequired($(this));
                FromUntilValidate();
            });


            function IsRequired(object) {
                var IsValid = true;
                $(object).parent().find('span').remove();
                $(object).parent().removeClass('has-error');
                $(object).parent().removeClass('has-success');
                var value = $(object).val();
                if (value.length <= 0) {
                    $(object).after('<span class="help-block">Is required.</span>');
                    $(object).parent().addClass('has-error');
                    IsValid = false;
                }
                else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().addClass('has-success');
                    IsValid = true;
                }
                return IsValid;
            }
        });
    </script>
}