@model DKUPPU.ViewModels.CTRFACApprovalViewModel
@{
    ViewBag.Title = "Certification of Type Rating FAC Revise";
    ViewBag.sop_type = Model.TrxLicenseViewModel.id_sop_type;
    
}

<div class="jarviswidget jarviswidget-sortable" data-widget-editbutton="false" data-widget-colorbutton="false" role="widget">
    <header>
        <span class="widget-icon"><i class="fa fa-eye"></i></span>
        <h2>Approval Form</h2>
        <span class="jarviswidget-loader">
            <i class="fa fa-refresh fa-spin"></i>
        </span>
    </header>
    <div role="content">
        <div class="jarviswidget-editbox"> </div>
        <div class="widget-body">

            <!--Data Applicant Begin-->
            @Html.Partial("../MstRegisterForm/_DataApplicantForm", Model.Applicant)

            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                @Html.HiddenFor(model => model.TrxLicenseViewModel.id_trx_license)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.id_applicant)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.id_license_category)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.id_license_type)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.id_sop_type)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.reg_no)
                @Html.HiddenFor(model => model.TrxWfViewModel.sn)

                <div class="row">
                    <div class="col-xs-12">
                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TrxLicenseViewModel.license_no, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                                <div class="col-md-2">
                                    @Html.TextBoxFor(model => model.TrxLicenseViewModel.license_no, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div>
                    @Html.Partial("../MstRegisterForm/_MedicalCheckForm", Model.TrxLicMedicalCertificateViewModel)
                </div>

                <div class="row">
                    <div class="col-xs-6">
                        <legend>
                            Type Of Aircraft
                            <div class="pull-right">
                                <a id="addColumn" role="button" class="btn btn-primary btn-xs"><i class="fa fa-plus"></i></a>
                            </div>
                        </legend>
                        @Html.Partial("../TrxReviseForm/_LicAircraftTypeRattingForm", Model.TrxLicAircraftTypeRatingViewModel)
                    </div>
                    <div class="col-xs-6">
                        <legend>Competency Checks</legend>
                        @Html.Partial("../TrxReviseForm/_LicCompetencyCheckForm", Model.TrxLicCompetencyCheckViewModel)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6">
                        <legend>Recurrent Type Of Aircraft</legend>
                        @Html.Partial("../TrxReviseForm/_LicRecurrentTypeOfAircraftForm", Model.TrxLicRecurrentTypeOfAircraftViewModel)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12">
                        <h2>Recurrent Mandatory License</h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6">
                        <legend>Crew Member Emergency Training</legend>
                        @Html.Partial("../TrxReviseForm/_LicCrewEmergencyTrainingForm", Model.TrxLicCrewEmergencyTrainingViewModel)
                    </div>
                    <div class="col-xs-6">
                        <legend>Aviation Security</legend>
                        @Html.Partial("../TrxReviseForm/_LicAviationSecurityForm", Model.TrxLicAviationSecurityViewModel)
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6">
                        <legend>Dangerous Good</legend>
                        @Html.Partial("../TrxReviseForm/_LicDangerousGoodsForm", Model.TrxLicDangerousGoodsViewModel)
                    </div>
                    <div class="col-xs-6">
                        <legend>Crew Resourche Management</legend>
                        @Html.Partial("../TrxReviseForm/_LicCrewResourceManagementForm", Model.TrxLicCrewResourceManagementViewModel)
                    </div>
                </div>
                <fieldset>
                    <legend>Upload Document</legend>
                    @Html.Partial("../TrxReviseForm/_DocUploadForm", Model.MstDocUploadViewModel)
                </fieldset>
                <div id="error">
                    <input type="checkbox" id="checkbox-disclaimer" />
                    I understand and aware of my responsibility as a representative of the company or organization as assigned.
                    I further certify under penalty of perjury under Republic of Indonesia law that the information filled in the form above is true and correct.
                </div>
                <div class="form-actions">
                    <button id="submit" class="btn btn-primary" type="submit"> Submit </button>
                    <a href="@Url.Action("Index","Home")" class="btn btn-default"> Cancel </a>
                </div>
            }
        </div>
    </div>
</div>
<script>
    $(function () {
        var hasError = 0;

        $('.id_type_rating').change(function (e) {
            e.preventDefault();
            var index = parseInt($(this).parent().parent().attr('id').match(/\d+/));

            var id = $(this).attr("id");
            var itemText = $('#' + id + ' option:selected').text();
            var itemValue = $(this).val();
            $('#TrxLicAircraftTypeRatingViewModel_' + index + '__type_rating_name').empty();
            $('#TrxLicAircraftTypeRatingViewModel_' + index + '__type_rating_name').val(itemText);

            $('#TrxLicCompetencyCheckViewModel_' + index + '__id_rating').empty();
            $('#TrxLicCompetencyCheckViewModel_' + index + '__id_rating').val(itemValue);
            $('#TrxLicCompetencyCheckViewModel_' + index + '__rating').empty();
            $('#TrxLicCompetencyCheckViewModel_' + index + '__rating').val(itemText);

            $('#TrxLicRecurrentTypeOfAircraftViewModel_' + index + '__id_rating').empty();
            $('#TrxLicRecurrentTypeOfAircraftViewModel_' + index + '__id_rating').val(itemValue);
            $('#TrxLicRecurrentTypeOfAircraftViewModel_' + index + '__rating').empty();
            $('#TrxLicRecurrentTypeOfAircraftViewModel_' + index + '__rating').val(itemText);
        });

        //Add Item
        $('form').submit(function () {
            //return false;
            $form = $('form:first');
            var value = $(this).val();

            //validasi file type
            $.each($form.find('input[type="file"]'), function (i, val) {
                if (!FileValidation($(this))) {
                    hasError = hasError + 1;
                }
                if (!FileSize($(this))) {
                    hasError = hasError + 1;
                }
            });

            //validasi is required
            $.each($form.find('.required-value'), function (i, val) {
                if (!IsRequired($(this))) {
                    hasError = hasError + 1;
                }
            });

            if ($form.find('.has-error').length > 0 || hasError > 0) {
                return false;
            }

            //validasi date form - until
            if (!FromUntilValidate()) {
                hasError = hasError + 1;
            }
        });

        $('#addColumn').click(function (e) {
            e.preventDefault();
            var $TypeOfAircraft = $('#TrxLicAircraftTypeRatingViewModel');
            var $CompetencyCheck = $('#TrxLicCompetencyCheckViewModel');
            var $RecurrentTypeOfAircraft = $('#TrxLicRecurrentTypeOfAircraftViewModel');
            addRow(e, $TypeOfAircraft);
            addRow(e, $CompetencyCheck);
            addRow(e, $RecurrentTypeOfAircraft);
        });

        $('div').on("click", "a.remove-row", function (e) {
            e.preventDefault();
            var $TypeOfAircraft = $('#TrxLicAircraftTypeRatingViewModel');
            var $CompetencyCheck = $('#TrxLicCompetencyCheckViewModel');
            var $RecurrentTypeOfAircraft = $('#TrxLicRecurrentTypeOfAircraftViewModel');
            var trRemove = $(this).parent().parent().attr('id');
            var indexIdTr = trRemove.match(/\d+/);
            Remove(e, "TrxLicAircraftTypeRatingViewModel_" + indexIdTr, $TypeOfAircraft);
            Remove(e, "TrxLicCompetencyCheckViewModel_" + indexIdTr, $CompetencyCheck);
            Remove(e, "TrxLicRecurrentTypeOfAircraftViewModel_" + indexIdTr, $RecurrentTypeOfAircraft);
        });

        function addRow(e, $tabelData) {
            e.preventDefault();
            var $trLast = $tabelData.find("tr:last");
            var $trNew = $trLast.clone();

            var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
            if ($tabelData.attr('id') == "TrxLicAircraftTypeRatingViewModel") {

                $trNew.find("td:last").html($('<a role="button" class="remove-row btn btn-xs btn-danger"><i class="fa fa-trash-o"></i></a>'));
            }
            var oldNTr = $trNew.attr('id');
            var newNTr = oldNTr.replace('_' + suffix, '_' + (parseInt(suffix) + 1));
            $trNew.attr('id', newNTr);
            $.each($trNew.find(':input'), function (i, val) {

                // Replaced Name
                var oldN = $(this).attr('name');
                var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                $(this).attr('name', newN);

                // Replaced ID
                var oldID = $(this).attr('id');
                var newID = oldID.replace('_' + suffix + '_', '_' + (parseInt(suffix) + 1) + '_');
                $(this).attr('id', newID);

                $(this).val('');
                $(this).removeClass("input-validation-error");
            });

            $.each($trNew.find(':input.date-picker'), function (i, val) {
                $(this).removeClass("hasDatepicker");
                $(this).datepicker({
                    dateFormat: 'dd/mm/yy',
                    changeMonth: true,
                    changeYear: true
                });
            });

            var VSKILL05 = $('#val-SKILL05').attr('data-date');

            $.each($trNew.find(':input.date-skill05'), function (i, val) {
                $(this).removeClass("hasDatepicker");
                $(this).datepicker({
                    dateFormat: 'dd/mm/yy',
                    changeMonth: true,
                    changeYear: true,
                    minDate: VSKILL05,
                });
            });

            var VSKILL09 = $('#val-SKILL09').attr('data-date');

            $.each($trNew.find(':input.date-skill09'), function (i, val) {
                $(this).removeClass("hasDatepicker");
                $(this).datepicker({
                    dateFormat: 'dd/mm/yy',
                    changeMonth: true,
                    changeYear: true,
                    minDate: VSKILL09,
                });
            });

            var VSKILL06 = $('#val-SKILL06').attr('data-date');

            $.each($trNew.find(':input.date-skill06'), function (i, val) {
                $(this).removeClass("hasDatepicker");
                $(this).datepicker({
                    dateFormat: 'dd/mm/yy',
                    changeMonth: true,
                    changeYear: true,
                    minDate: VSKILL06,
                });
            });

            var VSKILL07 = $('#val-SKILL07').attr('data-date');

            $.each($trNew.find(':input.date-skill07'), function (i, val) {
                $(this).removeClass("hasDatepicker");
                $(this).datepicker({
                    dateFormat: 'dd/mm/yy',
                    changeMonth: true,
                    changeYear: true,
                    minDate: VSKILL07,
                });
            });
            $trLast.after($trNew);

        }
        function Remove(e, TrIdToRemove, $tabelData) {
            e.preventDefault();
            $("#" + TrIdToRemove).remove();
            $.each($tabelData.find('tr'), function (i, val) {

                var oldIndex = $(this).attr('id').match(/\d+/);

                $.each($(this).find(':input'), function (x, val) {
                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + oldIndex + ']', '[' + i + ']');
                    $(this).attr('name', newN);

                    // Replaced ID
                    var oldID = $(this).attr('id');
                    var newID = oldID.replace('_' + oldIndex + '_', '_' + i + '_');
                    $(this).attr('id', newID);
                });

                // replace id tr
                var oldNTr = $(this).attr('id');
                var newNTr = oldNTr.replace('_' + oldIndex, '_' + i);
                $(this).attr('id', newNTr);

            });
        }

        //Validasi type doc
        $('input[type="file"]').on("change", function () {
            if (FileValidation($(this))) {
                FileSize($(this));
            }
        });

        function FileValidation(object) {
            var IsValid = true;

            var allowedExtensions = ["jpg", "pdf", "png"];

            var value = $(object).val(),
                        file = value.toLowerCase(),
                        extension = file.substring(file.lastIndexOf('.') + 1);
            if ($(object).val().length > 0) {

                $(object).parent().find('span').remove();
                $(object).parent().parent().removeClass('has-error');
                $(object).parent().parent().removeClass('has-success');

                if ($.inArray(extension, allowedExtensions) == -1) {
                    $(object).after('<span class="help-block">Invalid File. Please upload a File with extension: '+allowedExtensions.join(", ")+'</span>');
                    $(object).parent().parent().addClass('has-error');
                    IsValid = false;
                } else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        // validasi file size document upload
        function FileSize(object) {
            var IsValid = true;
            if ($(object).val().length > 0) {
                $(object).parent().find('span').remove();
                $(object).parent().removeClass('has-error');
                $(object).parent().removeClass('has-success');
                var file = $(object)[0].files[0];
                var maxFileSize = $('#DocUploadFormFileSize').val();

                if (file.size > parseInt(maxFileSize) || file.FileSize > parseInt(maxFileSize)) {
                    $(object).after('<span class="help-block">The file size to big</span>');
                    $(object).parent().addClass('has-error');
                    IsValid = false;
                } else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        function IsRequired(object) {
            var IsValid = true;
            $(object).parent().find('span').remove();
            $(object).parent().removeClass('has-error');
            $(object).parent().removeClass('has-success');
            var value = $(object).val();
            if (value.length <= 0) {
                $(object).after('<span class="help-block">Is required.</span>');
                $(object).parent().addClass('has-error');
                IsValid = false;
            }
            else {
                $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                $(object).parent().addClass('has-success');
                IsValid = true;
            }
            return IsValid;
        }

        function FromUntilValidate() {
            var IsValid = true;
            var checked_date = "";
            var expired_date = "";
            $('#TrxLicCompetencyCheckViewModel_1__checked_date').parent().find('span').remove();
            $('#TrxLicCompetencyCheckViewModel_1__checked_date').parent().removeClass('has-error');
            $('#TrxLicCompetencyCheckViewModel_1__checked_date').parent().removeClass('has-success');

            $('#TrxLicCompetencyCheckViewModel_1__expired_date').parent().find('span').remove();
            $('#TrxLicCompetencyCheckViewModel_1__expired_date').parent().removeClass('has-error');
            $('#TrxLicCompetencyCheckViewModel_1__expired_date').parent().removeClass('has-success');

            checked_date = $('#TrxLicCompetencyCheckViewModel_1__checked_date').val();
            expired_date = $('#TTrxLicCompetencyCheckViewModel_1__expired_date').val();
            if (checked_date != null && expired_date != null) {
                if (from_date.length > 0 && until_date.length > 0) {
                    var from = from_date.split('/');
                    var fromDate = new Date(from[1] + '/' + from[0] + '/' + from[2]);

                    var until = until_date.split('/');
                    var untilDate = new Date(until[1] + '/' + until[0] + '/' + until[2]);

                    if (fromDate >= untilDate) {
                        $('#TrxLicMedicalCertificateViewModel_1__until_date').after('<span class="help-block">The date range not valid</span>');
                        $('#TrxLicMedicalCertificateViewModel_1__until_date').parent().addClass('has-error');

                        $('#TrxLicMedicalCertificateViewModel_1__from_date').after('<span class="help-block">The date range not valid</span>');
                        $('#TrxLicMedicalCertificateViewModel_1__from_date').parent().addClass('has-error');
                        IsValid = false;
                    }
                    else {
                        $('#TrxLicMedicalCertificateViewModel_1__until_date').after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                        $('#TrxLicMedicalCertificateViewModel_1__until_date').parent().addClass('has-success');

                        $('#TrxLicMedicalCertificateViewModel_1__from_date').after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                        $('#TrxLicMedicalCertificateViewModel_1__from_date').parent().addClass('has-success');
                        IsValid = true;
                    }
                }
            }
            return IsValid;
        }

    });
</script>
