@model DKUPPU.ViewModels.CTRPRegisterFormViewModel
@{
    ViewBag.Title = "Certification of Type Rating Pilot Register";
}


<div class="jarviswidget jarviswidget-sortable" data-widget-editbutton="false" data-widget-colorbutton="false" role="widget">
    <header>
        <span class="widget-icon"><i class="fa fa-eye"></i></span>
        <h2>Register Form</h2>
        <span class="jarviswidget-loader">
            <i class="fa fa-refresh fa-spin"></i>
        </span>
    </header>
    <div role="content">
        <div class="jarviswidget-editbox"> </div>
        <div class="widget-body">

            <!--Data Applicant Begin-->
            @Html.Partial("../MstRegisterForm/_DataApplicantForm", Model.Applicant)
            <!--Data Applican End-->
            <!--Form Begin-->
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <!--ID Primary-->
                    @Html.HiddenFor(model => model.id_trx_license)
                    @Html.HiddenFor(model => model.id_applicant)
                    @Html.HiddenFor(model => model.id_license_category)
                    @Html.HiddenFor(model => model.id_license_type)
                    @Html.HiddenFor(model => model.id_sop_type)

                    <div class="form-group">
                        @Html.LabelFor(model => model.LicenseType, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.LicenseType, (IEnumerable<SelectListItem>)ViewBag.LicenseTypeDrop, "Select Lic. Type", htmlAttributes: new { @class = "form-control license-type-ctrp required-value" })
                        </div>
                    </div><div class="form-group">
                        @Html.LabelFor(model => model.license_no, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.CurrentLicenseNo, (IEnumerable<SelectListItem>)ViewBag.LicenseNoDrop, "Select License No.", htmlAttributes: new { @class = "form-control required-value" })
                            @Html.HiddenFor(model => model.idtrxlicense)
                            @Html.HiddenFor(model => model.license_no)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.total_flying_hours, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.total_flying_hours, new { htmlAttributes = new { @class = "form-control required-value" } })
                        </div>
                        @Html.LabelFor(model => model.radio_phone_no, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Applicant.radio_telephone_number, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div id="medical-certificate-license-div">
                        @Html.Partial("../MstRegisterForm/_MedicalCheckForm", Model.TrxLicMedicalCertificateViewModel)
                    </div>
                    <!--Aircraft Category Rating-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.aircraft_category_rating, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                        @Html.HiddenFor(model => model.aircraft_category_rating)
                        <div class="col-md-10">
                            @foreach (var item in (IEnumerable<DKUPPU.ViewModels.MstLookupViewModel>)ViewBag.aircraft_category_rating)
                            {
                                <label class="radio radio-inline">
                                    <input id="radio-aircraft-ratting-@item.lookup_value" type="radio" class="radio-aircraft-ratting radiobox" name="aircraft_category_rating" value="@Html.DisplayFor(a=>item.lookup_value)" disabled="disabled" />
                                    <span>@Html.DisplayFor(a => item.lookup_value)</span>
                                </label>
                            }
                        </div>
                    </div>
                    <!--List Aircarft Ratting Button Add and Remove-->
                    <!--List Aircarft Ratting-->
                    <div class="form-group">
                        <div class="col-md-2"></div>
                        <div class="col-md-9" id="list-aircraft-class-ratting"></div>
                    </div>
                    <!--List Aircarft Type Ratting-->
                    <div class="form-group" style="padding-bottom:0px;">
                        @Html.LabelFor(model => model.aircraft_type_rating, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                        <div class="col-md-10 no-padding">
                            <div class="col-md-12">
                                <a class="btn btn-primary btn-xs pull-right" id="add-type-rating"><i class="fa fa-plus"></i></a>
                                <a class="btn btn-danger btn-xs pull-right" id="remove-type-rating"><i class="fa fa-trash-o"></i></a>
                                <input type="hidden" id="index-aircraft-type-rating" />
                                <input type="hidden" id="index-ppc-rating" />
                            </div>
                            <div class="col-md-12" id="list-aircraft-type-rating">
                                
                                @Html.Partial("../MstRegisterForm/_LicAircraftTypeRatingCertPilotFrom", Model.TrxLicAircraftTypeRatingViewModel)
                            </div>

                        </div>
                    </div>
                    <!--PPC Type Ratting-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.ppc_type_ratting, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                        <div class="col-md-10" id="list-ppc-ratting">
                            @Html.Partial("../TrxRegisterForm/_PPCTypeRatingForm", Model.TrxLicPpcViewModel)
                        </div>
                    </div>
                    <!--Instrument Rating-->
                    <div class="form-group">
                        <div class="col-md-2">Instrument Rating</div>
                        <div class="col-md-10 no-padding">
                            <div class="col-md-12" id="btn-group-instrument">
                                <a class="btn btn-primary btn-xs pull-right" id="add-instrument-rating"><i class="fa fa-plus"></i></a>
                                <a class="btn btn-danger btn-xs pull-right" id="rmv-instrument-rating"><i class="fa fa-trash-o"></i></a>
                            </div>
                            <div class="col-md-12" id="list-instrument-rating">

                            </div>
                            @*@Html.Partial("../TrxRegisterForm/_LicInstrumentRattingForm", new List<DKUPPU.ViewModels.TrxLicInstrumentRatingViewModel>())*@
                        </div>
                    </div>
                    <fieldset>
                        <legend>Upload Document</legend>
                        @Html.Partial("../MstRegisterForm/_DocUploadForm", Model.MstDocUploadViewModel)
                    </fieldset>
                    <div id="error">
                        <input type="checkbox" id="checkbox-disclaimer" />
                        I understand and aware of my responsibility as a representative of the company or organization as assigned.
                        I further certify under penalty of perjury under Republic of Indonesia law that the information filled in the form above is true and correct.
                    </div>
                    <div class="form-actions">
                        <button class="btn btn-primary" type="submit"> Submit </button>
                        <a href="@Url.Action("Index","Home")" class="btn btn-default"> Cancel </a>
                    </div>
                </div>
                    <!--End Form-->
            }
        </div>
    </div>
</div>
<script>
    $(function () {
        $("#btn-group-instrument").hide();

        // add type ratting
        $("#add-type-rating").click(function () {
            var rowCount1 = $("#TrxLicAircraftTypeRatingViewModel > tr").length;
            var rowCount2 = $("#TrxLicPpcViewModel > tr").length;
            var index = rowCount1 - 1;
            var cmb = $("#TrxLicAircraftTypeRatingViewModel_" + index + "__id_type_rating").val();
            var date = $("#TrxLicAircraftTypeRatingViewModel_" + index + "__issued_date").val();
            if (cmb != "" && date != "") {
                var oldObject1 = $("#TrxLicAircraftTypeRatingViewModel").find("tr:first");
                var objectTr1 = $("#TrxLicAircraftTypeRatingViewModel > tr");
                addTypeRating(rowCount1, oldObject1, objectTr1);

                var oldObject2 = $("#TrxLicPpcViewModel").find("tr:first");
                var objectTr2 = $("#TrxLicPpcViewModel > tr");
                addTypeRating(rowCount2, oldObject2, objectTr2);
            }

            var vcheck = $('#index-aircraft-type-rating').attr('class');
            if (vcheck !== "ischecked")
            {
                $('#index-aircraft-type-rating').val(rowCount1);
                $('#index-ppc-rating').val(rowCount2);
                $('#index-aircraft-type-rating').addClass("ischecked");
            }
            
        });

        $("#remove-type-rating").click(function () {
            var rowCount = $("#TrxLicAircraftTypeRatingViewModel >tr").length;
            if (rowCount > 1) {
                $("#TrxLicAircraftTypeRatingViewModel tr:last").remove();
                $("#TrxLicPpcViewModel tr:last").remove();
            }
        });

        $("#add-instrument-rating").click(function () {
            var rowCount = $("#TrxLicInstrumentRatingViewModel >tr").length;
            var oldObject = $("#TrxLicInstrumentRatingViewModel").find("tr:first");
            var objectTr = $("#TrxLicInstrumentRatingViewModel >tr");
            addTypeRating(rowCount, oldObject, objectTr);
        });

        $("#rmv-instrument-rating").click(function () {
            var rowCount = $("#TrxLicInstrumentRatingViewModel >tr").length;
            if (rowCount > 1) {
                $("#TrxLicInstrumentRatingViewModel tr:last").remove();
            }
        });

        function addTypeRating(rowCount, oldObject, objectTr) {
            var copyObject = oldObject.clone();

            $.each(copyObject.find('select'), function (i, val) {
                var oldName = $(this).attr('name');
                var newName = oldName.replace('[0]', '[' + rowCount + ']');
                $(this).attr('name', newName);

                var oldId = $(this).attr('id');
                var newId = oldId.replace('_0_', '_' + rowCount + '_');
                $(this).attr('id', newId);

                $(this).val('');
                // to remove disabled
                $(this).removeAttr('disabled');
                $(this).removeAttr('readonly');

            });

            $.each(copyObject.find(':input'), function (i, val) {
                var oldName = $(this).attr('name');
                var newName = oldName.replace('[0]', '[' + rowCount + ']');
                $(this).attr('name', newName);

                var oldId = $(this).attr('id');
                var newId = oldId.replace('_0_', '_' + rowCount + '_');
                $(this).attr('id', newId);

                $(this).val('');
                // to remove disabled
                $(this).removeAttr('disabled');
                $(this).removeAttr('readonly');
            });

            $.each(copyObject.find('.date-picker'), function (i, val) {
                $(this).removeClass('hasDatepicker');
                $(this).removeClass('date-picker');
                // remove disable
                $(this).removeAttr('disabled');
                // remove readonly
                $(this).attr("readonly", false)
                $(this).datepicker({
                    dateFormat: 'dd/mm/yy',
                    changeMonth: true,
                    changeYear: true
                });
            });

            var VSKILL05 = $('#val-SKILL05').attr('data-date');

            $.each(copyObject.find(':input.date-skill05'), function (i, val) {
                $(this).removeClass("hasDatepicker");
                $(this).datepicker({
                    dateFormat: 'dd/mm/yy',
                    changeMonth: true,
                    changeYear: true,
                    minDate: VSKILL05,
                });
            });

            objectTr.last().after(copyObject);
        }

        $('#LicenseType').change(function () {
            var licensetype = $(this).val();
            var idapplicant = $('#id_applicant').val();
            GetHisLicTypeByIdApplicanLicType(idapplicant, licensetype);
        });

        //category ratting
        function GetAircraftClassRattingByMstLicense(id_mst_license) {
            $.ajax({
                url: '@Url.Action("GetAircraftClassRattingByMstLicense", "AJAX")',
                data: {
                    id_mst_license: id_mst_license
                },
                dataType: 'html',
                success: function (data) {
                    $('#list-aircraft-class-ratting').html(data);
                }
            });
        }

        function GetAircraftTypeRating(id_mst_license) {
            $.ajax({
                url: '@Url.Action("GetMultiTypeRatingMstLicense", "AJAX")',
                data: {
                    id_mst_license: id_mst_license
                },
                dataType: 'html',
                beforeSend: function () {
                    var img = '<div class="row">' +
                                '<div class="col-xs-12"><div style="text-align:center;height:200px;padding-top:75px"><img style="width:50px;height:50px" src="@DKUPPU.Helpers.ImageLoader.Loader" /></div>' +
                                '</div></div>';
                    $('#list-aircraft-type-rating').html(img);
                },
                success: function (data) {
                    $('#list-aircraft-type-rating').html(data);
                    var rowCount1 = $("#TrxLicAircraftTypeRatingViewModel > tr").length;
                    $('#index-aircraft-type-rating').val(rowCount1);
                }
            });
        }

        // Current license click
        $('#CurrentLicenseNo').change(function () {
            var idapplicant = $('#id_applicant').val();
            $.ajax({
                url: '@Url.Action("GetTrxLicenseByMstLicense", "AJAX")',
                data: {
                    id_mst_license: $(this).val()
                },
                dataType: 'JSON',
                success: function (data) {
                    $('#idtrxlicense').val(data.id_trx_license);

                    $('#license_no').val(data.license_no);

                    $('#total_flying_hours').val(data.total_flying_hours);

                    $('#radio_phone_no').val(data.radio_phone_no);
                    $(':radio[value="' + data.aircraft_category_rating + '"]').attr('checked', 'checked');
                    $('#aircraft_category_rating').val(data.aircraft_category_rating);
                    //load data
                    GetMedicalCertificateByIdTrxLicense(data.id_trx_license);
                    GetAircraftClassRattingByMstLicense(data.id_mst_license);
                    GetInstrumentRating(data.id_mst_license);
                    GetAircraftTypeRating(data.id_mst_license);
                    GetPPCTypeRating(data.id_mst_license);
                    $("#btn-group-instrument").show();                    
                }
            });
        });

        //$('#idtrxlicense').change(function () {
        //    GetMedicalCertificateByIdTrxLicense($(this).val());
        //    GetInstrumentRating($(this).val());
        //});

        function GetInstrumentRating(id_mst_license) {
            $.ajax({
                url: '@Url.Action("GetInstrumentRatingMstLicense", "AJAX")',
                data: {
                    id_mst_license: id_mst_license,
                },
                dataType: 'html',
                beforeSend: function () {
                    var img = '<div class="row">' +
                                '<div class="col-xs-12"><div style="text-align:center;height:200px;padding-top:75px"><img style="width:50px;height:50px" src="@DKUPPU.Helpers.ImageLoader.Loader" /></div>' +
                                '</div></div>';
                    $('#list-license').html(img);
                },
                success: function (data) {
                    $('#list-instrument-rating').html(data);
                }
            });
        }

        function GetMedicalCertificateByIdTrxLicense(idtrxlicense) {
            $.ajax({
                url: '@Url.Action("GetMedicalCertificateByTrxLicense", "AJAX")',
                data: {
                    id_trx_license: idtrxlicense
                },
                dataType: 'html',
                beforeSend: function () {
                    var img = '<div class="row">' +
                                '<div class="col-xs-12"><div style="text-align:center;height:200px;padding-top:75px"><img style="width:50px;height:50px" src="@DKUPPU.Helpers.ImageLoader.Loader" /></div>' +
                                '</div></div>';
                    $('#list-license').html(img);
                },
                success: function (datamedical) {
                    $('#medical-certificate-license-div').html('');
                    $('#medical-certificate-license-div').html(datamedical);
                }
            });
        }

        function GetHisLicTypeByIdApplicanLicType(idapplicant, licensetype) {
            $.ajax({
                url: '@Url.Action("GetHisLicTypeByIdApplicanLicType", "AJAX")',
                data: {
                    idapplicant: idapplicant,
                    licensetype: licensetype
                },
                dataType: 'JSON',
                success: function (data) {
                    $('#CurrentLicenseNo').empty();
                    $('#CurrentLicenseNo').append('<option value="">Select License No.</option>');
                    $.each(data, function (i, data) {
                        $('#CurrentLicenseNo').append('<option value="' + data.id_lookup + '">' + data.lookup_value + '</option>');
                    });
                }
            });
        }

        function GetPPCTypeRating(id_mst_license) {
            $.ajax({
                url: '@Url.Action("GetMultiPPCRattingByMstLicense", "AJAX")',
                data: {
                    id_mst_license: id_mst_license
                },
                dataType: 'html',
                beforeSend: function () {
                    var img = '<div class="row">' +
                                '<div class="col-xs-12"><div style="text-align:center;height:200px;padding-top:75px"><img style="width:50px;height:50px" src="@DKUPPU.Helpers.ImageLoader.Loader" /></div>' +
                                '</div></div>';
                    $('#list-ppc-ratting').html(img);
                },
                success: function (data) {
                    $('#list-ppc-ratting').html(data);
                    var rowCount1 = $("#TrxLicPpcViewModel > tr").length;
                    $('#index-ppc-rating').val(rowCount1);
                }
            });
        }

        /** textbox aircraft type ratting click */
        $('#list-aircraft-type-rating').on('change', '.id_type_rating', function (e) {
            e.preventDefault();

            var id = $(this).attr("id");
            var itemText = $('#' + id + ' option:selected').text();
            var itemValue = $(this).val();
            var index = parseInt($(this).attr('id').match(/\d+/));

            var idRating = $('#index-aircraft-type-rating').val();
            var indexSelisih = (idRating - 1) - index;

            var idPPC = $('#index-ppc-rating').val();
            var indexPPC = (idPPC -1) + parseInt(indexSelisih);

            

            $('#TrxLicAircraftTypeRatingViewModel_' + index + '__type_rating_name').empty();
            $('#TrxLicAircraftTypeRatingViewModel_' + index + '__type_rating_name').val(itemText);

            $('#TrxLicPpcViewModel_' + indexPPC + '__ppc_type_rating').val(itemValue);
            $('#TrxLicPpcViewModel_' + indexPPC + '__ppc_type_rating_value').val(itemText);
        });

        function AddPPCAircraftTypeRatting(id_type_rating, type_rating_name) {
            $.ajax({
                url: '@Url.Action("GetListPPCAircraftTypeRating", "AJAX")',
                data: {
                    id_type_rating: id_type_rating,
                    type_rating_name: type_rating_name
                },
                dataType: 'html',
                beforeSend: function () {
                    var img = '<div class="row">' +
                                '<div class="col-xs-12"><div style="text-align:center;height:200px;padding-top:75px"><img style="width:50px;height:50px" src="@DKUPPU.Helpers.ImageLoader.Loader" /></div>' +
                                '</div></div>';
                    $('#list-license').html(img);
                },
                success: function (data) {
                    $('#list-ppc-ratting').html(data);
                    $(':input.hasDatepicker').each(function () {
                        $(this).keypress(function (e) {
                            var key = e.charCode || e.keyCode;

                            if (key == 13) {
                                // enter key do nothing
                            }
                            else {
                                e.preventDefault();
                            }
                        });

                        $(this).keydown(function (e) {
                            var key = e.charCode || e.keyCode;

                            if (key == 13) {
                                // enter key do nothing
                            }
                            else {
                                e.preventDefault();
                            }
                        });

                        $(this).keyup(function (e) {
                            var key = e.charCode || e.keyCode;

                            if (key == 13) {
                                // enter key do nothing
                            }
                            else {
                                e.preventDefault();
                            }
                        });
                    });
                }
            });
        }


        //** Validasi form
        $('form').submit(function () {
            //return false;
            var hasError = 0;
            $form = $('form:first');

            //validasi file type
            $.each($form.find('input[type="file"]'), function (i, val) {
                if (!FileValidation($(this))) {
                    hasError = hasError + 1;
                }
                if (!FileSize($(this))) {
                    hasError = hasError + 1;
                }
            });

            //validasi is required
            $.each($form.find('.required-value'), function (i, val) {
                if (!IsRequired($(this))) {
                    hasError = hasError + 1;
                }
            });

            //validasi date form - until
            if (!FromUntilValidate()) {
                hasError = hasError + 1;
            }

            //validasi numeric
            if (!MustNumber($('#total_flying_hours'))) {
                hasError = hasError + 1;
            }

            if (!LessThan34($('#total_flying_hours'))) {
                hasError = hasError + 1;
            }

            //if hasError has value more than 0 that return false
            if (hasError > 0) {
                return false;
            }
            //return false;
        });

        //validasi is required
        $('.required-value').keyup(function () {
            IsRequired($(this));
        });

        $('.required-value.date-picker').change(function () {
            IsRequired($(this));
            FromUntilValidate();
        });

        // validasi numerik and less than 400
        $('#total_flying_hours').keyup(function () {
            if (MustNumber($(this))) {
                LessThan34($(this));
            }
        });

        //validasi file type
        $('input[type="file"]').on("change", function () {
            if (FileValidation($(this))) {
                FileSize($(this));
            }
        });

        function FileValidation(object) {
            var IsValid = true;

            var allowedExtensions = ["jpg", "pdf", "png"];

            var value = $(object).val(),
                        file = value.toLowerCase(),
                        extension = file.substring(file.lastIndexOf('.') + 1);
            if ($(object).val().length > 0) {

                $(object).parent().find('span').remove();
                $(object).parent().parent().removeClass('has-error');
                $(object).parent().parent().removeClass('has-success');

                if ($.inArray(extension, allowedExtensions) == -1) {
                    $(object).after('<span class="help-block">Invalid File. Please upload a File with extension: ' + allowedExtensions.join(", ") + '</span>');
                    $(object).parent().parent().addClass('has-error');
                    IsValid = false;
                } else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        // validasi file size document upload
        function FileSize(object) {
            var IsValid = true;
            if ($(object).val().length > 0) {
                $(object).parent().find('span').remove();
                $(object).parent().removeClass('has-error');
                $(object).parent().removeClass('has-success');
                var file = $(object)[0].files[0];
                var maxFileSize = $('#DocUploadFormFileSize').val();

                if (file.size > parseInt(maxFileSize) || file.FileSize > parseInt(maxFileSize)) {
                    $(object).after('<span class="help-block">The file size to big</span>');
                    $(object).parent().addClass('has-error');
                    IsValid = false;
                } else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        function IsRequired(object) {
            var IsValid = false;
            $(object).parent().find('span').remove();
            $(object).parent().parent().removeClass('has-error');
            $(object).parent().parent().removeClass('has-success');
            var value = $(object).val();
            if (value.length <= 0) {
                $(object).after('<span class="help-block">Is required.</span>');
                $(object).parent().parent().addClass('has-error');
                IsValid = false;
            }
            else {
                $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                $(object).parent().parent().addClass('has-success');
                IsValid = true;
            }
            return IsValid;
        }

        function MustNumber(object) {
            var IsValid = true;
            var numericReg = /^\d*[0-9](|.\d*[0-9]|,\d*[0-9])?$/;
            var value = $(object).val();
            if (value.length > 0) {
                $(object).parent().find('span').remove();
                $(object).parent().parent().removeClass('has-error');
                $(object).parent().parent().removeClass('has-success');

                if (!numericReg.test(value)) {
                    $(object).after('<span class="help-block">Numeric characters only.</span>');
                    $(object).parent().parent().addClass('has-error');
                    IsValid = false;
                }
                else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        function LessThan34(object) {
            var IsValid = true;
            var value = $(object).val();
            if (value.length > 0) {
                $(object).parent().find('span').remove();
                $(object).parent().parent().removeClass('has-error');
                $(object).parent().parent().removeClass('has-success');
                if (parseInt(value) < 34) {
                    $(object).after('<span class="help-block">The score not valid</span>');
                    $(object).parent().parent().addClass('has-error');
                    IsValid = false;
                }
                else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        function LessThan600MoreThan400(object) {
            var IsValid = true;
            var value = $(object).val();
            if (value.length > 0) {
                $(object).parent().find('span').remove();
                $(object).parent().parent().removeClass('has-error');
                $(object).parent().parent().removeClass('has-success');
                if (!(parseInt(value) > 399 && parseInt(value) < 601)) {
                    $(object).after('<span class="help-block">The score not valid</span>');
                    $(object).parent().parent().addClass('has-error');
                    IsValid = false;
                }
                else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        function FromUntilValidate() {
            var IsValid = false;

            $('#TrxLicMedicalCertificateViewModel_until_date').parent().find('span').remove();
            $('#TrxLicMedicalCertificateViewModel_from_date').parent().find('span').remove();
            $('#TrxLicMedicalCertificateViewModel_from_date').parent().removeClass('has-error');
            $('#TrxLicMedicalCertificateViewModel_from_date').parent().removeClass('has-success');

            var from_date = $('#TrxLicMedicalCertificateViewModel_from_date').val();
            var until_date = $('#TrxLicMedicalCertificateViewModel_until_date').val();
            if (from_date.length > 0 && until_date.length > 0) {
                var from = from_date.split('/');
                var fromDate = new Date(from[1] + '/' + from[0] + '/' + from[2]);

                var until = until_date.split('/');
                var untilDate = new Date(until[1] + '/' + until[0] + '/' + until[2]);

                if (fromDate >= untilDate) {
                    $('#TrxLicMedicalCertificateViewModel_until_date').after('<span class="help-block">The date range not valid</span>');
                    $('#TrxLicMedicalCertificateViewModel_until_date').parent().addClass('has-error');
                    IsValid = false;
                }
                else {
                    $('#TrxLicMedicalCertificateViewModel_until_date').after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $('#TrxLicMedicalCertificateViewModel_from_date').after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $('#TrxLicMedicalCertificateViewModel_until_date').parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

    });
</script>
