@model DKUPPU.ViewModels.EPLRegisterFormViewModel
@{
    ViewBag.Title = "English Proficiency Certificate Register";
}

<div class="jarviswidget jarviswidget-sortable" data-widget-editbutton="false" data-widget-colorbutton="false" role="widget">
    <header>
        <span class="widget-icon"><i class="fa fa-eye"></i></span>
        <h2>Register Form</h2>
        <span class="jarviswidget-loader">
            <i class="fa fa-refresh fa-spin"></i>
        </span>
    </header>
    <div role="content">
        <div class="jarviswidget-editbox"> </div>
        <fieldset class="widget-body">

            <!--Data Applicant Begin-->
            @Html.Partial("../MstRegisterForm/_DataApplicantForm", Model.Applicant)
            <!--Data Applican End-->
            <!--Form Begin-->
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="form-horizontal">
                    <!--ID Primary-->
                    @Html.HiddenFor(model => model.id_trx_license)
                    @Html.HiddenFor(model => model.id_applicant)
                    @Html.HiddenFor(model => model.id_license_category)
                    @Html.HiddenFor(model => model.id_license_type)
                    @Html.HiddenFor(model => model.id_sop_type)

                    <!--Medical Checkup Form-->
                    <fieldset>
                        <legend>
                            EPC
                            <a class="pull-right btn btn-primary btn-xs" id="add-epc"><i class="fa fa-plus"></i></a>
                            <a class="pull-right btn btn-danger btn-xs remove-epc"><i class="fa fa-trash-o"></i></a>
                        </legend>
                        <div id="list-epc">
                            @Html.Partial("../TrxRegisterForm/_LicEpcForm", Model.TrxLicEpcViewModel)
                        </div>
                    </fieldset>
                    <fieldset>
                        <legend>Upload Document</legend>
                        @Html.Partial("../MstRegisterForm/_DocUploadForm", Model.MstDocUploadViewModel)
                    </fieldset>
                    <div id="error">
                        <input type="checkbox" id="checkbox-disclaimer" />
                        I understand and aware of my responsibility as a representative of the company or organization as assigned.
                        I further certify under penalty of perjury under Republic of Indonesia law that the information filled in the form above is true and correct.
                    </div>
                    <div class="form-actions">
                        <button class="btn btn-primary" type="submit"> Submit </button>
                        <a href="@Url.Action("Index","Home")" class="btn btn-default"> Cancel </a>
                    </div>
                </div>
            }
            <!--End Form-->

    </div>
</div>

<script>
    $(function () {

        // datepicker
        $('.date-picker').datepicker({
            //options
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            //...
        });

        //** Validasi form
        $('form').submit(function () {
            //return false;
            var hasError = 0;
            $form = $('form:first');

            //validasi file type
            $.each($form.find('input[type="file"]'), function (i, val) {
                if (!FileValidation($(this))) {
                    hasError = hasError + 1;
                }
                if (!FileSize($(this))) {
                    hasError = hasError + 1;
                }
            });

            //validasi is required
            $.each($form.find('.required-value'), function (i, val) {
                if (!IsRequired($(this))) {
                    hasError = hasError + 1;
                }
            });

            ////validasi date form - until
            //if (!FromUntilValidate()) {
            //    hasError = hasError + 1;
            //}

            //if hasError has value more than 0 that return false
            if (hasError > 0) {
                return false;
            }
            //return false;
        });

        //validasi is required
        $('.required-value').keyup(function () {
            IsRequired($(this));
        });

        $('.required-value.date-picker').change(function () {
            IsRequired($(this));
            //FromUntilValidate();
        });

        //validasi file type
        $('input[type="file"]').on("change", function () {
            if (FileValidation($(this))) {
                FileSize($(this));
            }
        });

        function FileValidation(object) {
            var IsValid = true;

            var allowedExtensions = ["jpg", "pdf", "png"];

            var value = $(object).val(),
                        file = value.toLowerCase(),
                        extension = file.substring(file.lastIndexOf('.') + 1);
            if ($(object).val().length > 0) {

                $(object).parent().find('span').remove();
                $(object).parent().parent().removeClass('has-error');
                $(object).parent().parent().removeClass('has-success');

                if ($.inArray(extension, allowedExtensions) == -1) {
                    $(object).after('<span class="help-block">Invalid File. Please upload a File with extension: '+allowedExtensions.join(", ")+'</span>');
                    $(object).parent().parent().addClass('has-error');
                    IsValid = false;
                } else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        // validasi file size document upload
        function FileSize(object) {
            var IsValid = true;
            if ($(object).val().length > 0) {
                $(object).parent().find('span').remove();
                $(object).parent().removeClass('has-error');
                $(object).parent().removeClass('has-success');
                var file = $(object)[0].files[0];
                var maxFileSize = $('#DocUploadFormFileSize').val();

                if (file.size > parseInt(maxFileSize) || file.FileSize > parseInt(maxFileSize)) {
                    $(object).after('<span class="help-block">The file size to big</span>');
                    $(object).parent().addClass('has-error');
                    IsValid = false;
                } else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        function IsRequired(object) {
            var IsValid = false;
            $(object).parent().find('span').remove();
            $(object).parent().parent().removeClass('has-error');
            $(object).parent().parent().removeClass('has-success');
            var value = $(object).val();
            if (value.length <= 0) {
                $(object).after('<span class="help-block">Is required.</span>');
                $(object).parent().parent().addClass('has-error');
                IsValid = false;
            }
            else {
                $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                $(object).parent().parent().addClass('has-success');
                IsValid = true;
            }
            return IsValid;
        }

        function FromUntilValidate() {
            var IsValid = true;
            var from_date = "";
            var until_date = "";

            var suffix = parseInt($('#TrxLicEpcViewModel').find('tr:last').attr('id').match(/\d+/))

            $('#TrxLicEpcViewModel_' + suffix + '__expiry_date').parent().find('span').remove();
            $('#TrxLicEpcViewModel_' + suffix + '__expiry_date').parent().removeClass('has-error');
            $('#TrxLicEpcViewModel_' + suffix + '__expiry_date').parent().removeClass('has-success');

            $('#TrxLicEpcViewModel_' + suffix + '__date_of_exam').parent().find('span').remove();
            $('#TrxLicEpcViewModel_' + suffix + '__date_of_exam').parent().removeClass('has-error');
            $('#TrxLicEpcViewModel_' + suffix + '__date_of_exam').parent().removeClass('has-success');

            from_date = $('#TrxLicEpcViewModel_' + suffix + '__date_of_exam').val();
            until_date = $('#TrxLicEpcViewModel_' + suffix + '__expiry_date').val();
            if (from_date != null && until_date != null) {
                if (from_date.length > 0 && until_date.length > 0) {
                    var from = from_date.split('/');
                    var fromDate = new Date(from[1] + '/' + from[0] + '/' + from[2]);

                    var until = until_date.split('/');
                    var untilDate = new Date(until[1] + '/' + until[0] + '/' + until[2]);

                    if (fromDate >= untilDate) {
                        $('#TrxLicEpcViewModel_' + suffix + '__expiry_date').after('<span class="help-block">The date range not valid</span>');
                        $('#TrxLicEpcViewModel_' + suffix + '__expiry_date').parent().addClass('has-error');

                        $('#TrxLicEpcViewModel_' + suffix + '__date_of_exam').after('<span class="help-block">The date range not valid</span>');
                        $('#TrxLicEpcViewModel_' + suffix + '__date_of_exam').parent().addClass('has-error');
                        IsValid = false;
                    }
                    else {
                        $('#TrxLicEpcViewModel_' + suffix + '__expiry_date').after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                        $('#TrxLicEpcViewModel_' + suffix + '__expiry_date').parent().addClass('has-success');

                        $('#TrxLicEpcViewModel_' + suffix + '__date_of_exam').after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                        $('#TrxLicEpcViewModel_' + suffix + '__date_of_exam').parent().addClass('has-success');
                        IsValid = true;
                    }
                }
            }
            return IsValid;
        }

    });
</script>
