@model DKUPPU.ViewModels.ERSAircraftViewModel
@{
    Layout = null;
}
<div class="form-horizontal">
    <div class="row form-group">
        <label class="col-md-4 control-label text-left">
            &nbsp;
        </label>
        <div class="col-md-8">
            <div class="pull-right">
                <a id="addReasonForCancellation" role="button" class="btn btn-primary btn-xs"><i class="fa fa-plus"></i></a>
            </div><br />
        </div>
    </div>
    <div class="row form-group">
        <label class="col-md-4 control-label text-left">
            @Html.LabelFor(model => model.ReasonForCancellationViewModel)
        </label>
        <div class="col-md-8">
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Reason</th>
                            <th width="40px"></th>
                        </tr>
                    </thead>
                    <tbody id="TrxOrganizationAirlineTypeViewModel">
                            <tr id="TrxOrganizationAirlineTypeViewModel_0">
                                <td>
                                    <select class="form-control input-sm invisible" id="TrxOrganizationAirlineTypeViewModel_0__id_airline_type" name="TrxOrganizationAirlineTypeViewModel[0].id_airline_type">
                                        <option value="hahaha" selected>Registration Number</option>
                                        @foreach (var item in Model.ListOfReasonForCancellation)
                                        {
                                            <option value="@item.id_lookup">@item.lookup_value</option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    <a role="button" id="TrxOrganizationAirlineTypeViewModel_0__remove" class="airline-type-detail-remove-row btn btn-xs btn-danger invisible"><i class="fa fa-trash-o"></i></a>
                                </td>
                            </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="row form-group">
        <label class="col-md-4 control-label text-left">            
            @Html.LabelFor(model => model.propose_cancellation_date)
        </label>
        <div class="col-md-8">
            @Html.EditorFor(model => model.propose_cancellation_date, new { htmlAttributes = new { @class = "form-control date-picker" } })
        </div>
    </div>
</div>
<script>
    $(function () {
        $('.date-picker').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true
        });

        $('#addReasonForCancellation').click(function (e) {
            addRow(e, 'TrxOrganizationAirlineTypeViewModel');
        });

        $('div').on("click", "a.airline-type-detail-remove-row", function (e) {
            e.preventDefault();

            var trRemove = $(this).parent().parent().attr('id');
            var trIndexId = trRemove.match(/\d+/);

            RemoveRow(e, 'TrxOrganizationAirlineTypeViewModel', trIndexId);

            return false;
        });

        function addRow(e, tableName) {
            e.preventDefault();

            $('#' + tableName + '_0').hide();

            var $trLast = $('#' + tableName).find("tr:last");
            var $trNew = $('#' + tableName + '_0').clone();
            var suffix = $('#' + tableName + ' > tr').length;
            var oldNTr = $trNew.attr('id');
            var newNTr = oldNTr.replace('_0', '_' + parseInt(suffix));

            $trNew.attr('id', newNTr);
            $trNew.removeAttr('style');

            $.each($trNew.find('td'), function (i, val) {
                var compObject = $(this).children('[id*=' + tableName + '_]');
                var compName = compObject.attr('name');
                var compID = compObject.attr('id');

                if (typeof compName != 'undefined') {
                    compName = compName.replace('[0]', '[' + parseInt(suffix) + ']');
                    compObject.attr('name', compName);
                    compObject.addClass('required-value-dropdown');
                }

                if (typeof compID != 'undefined') {
                    compID = compID.replace('_0_', '_' + parseInt(suffix) + '_');

                    compObject.attr('id', compID);
                    compObject.removeClass('invisible');
                }
            });

            $trLast.after($trNew);
        }

        function RemoveRow(e, tableName, indexId) {
            e.preventDefault();

            $("#" + tableName + '_' + indexId).remove();

            var x = $('#' + tableName + ' > tr').length;

            if (x == 1) $('#' + tableName + '_0').show();

            return false;
        }
    });
</script>