@model DKUPPU.ViewModels.PAOCOrganizationViewModel

<div role="content">
    <div class="jarviswidget-editbox"> </div>
    <div class="widget-body">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.TrxOrganizationViewModel.id_trx_org)
            @Html.HiddenFor(model => model.TrxOrganizationViewModel.id_org_certificate)
            @Html.HiddenFor(model => model.TrxOrganizationViewModel.id_org_type)
            @Html.HiddenFor(model => model.TrxOrganizationViewModel.id_sop_type)
            @*@Html.HiddenFor(model => model.TrxWfViewModel.sn)*@

            string isAircraftTypeModelDisable = (ViewBag.IsAircraftTypeModelDisable) ? "disabled = 'disabled'" : string.Empty;
            bool isStatisfied = ViewBag.isStatisfied == null ? false : (ViewBag.isStatisfied ? true : false);
            string isJobAidDemontration = (ViewBag.isJobAidDemontration) == null ? string.Empty : (ViewBag.isJobAidDemontration ? string.Empty: "hidden ='hidden'" );
            <div>
                <br />
                <div class="row col-md-12">
                    <fieldset>
                        <legend>Information</legend>
                    </fieldset>
                </div>
                <div class="form-horizontal">
                    <div class="row form-group">
                        <div class="col-md-12">
                            @Html.Partial("../PAOCOrganization/Phase1/_InformationForm", Model.TrxOrganizationInitialCerViewModel)
                        </div>
                    </div>
                </div>
                @if (ViewBag.isJobAidDemontration == true)
                {
                    <fieldset @isJobAidDemontration>
                        <legend>Demontration and Inspection Phase - Job Aid</legend>
                        @Html.Partial("../PAOCOrganization/Phase4/_JobAidApprovalForm", Model.ListJobAidApproval)
                    </fieldset>
                }
                @if (isStatisfied == true)
                {
                    <fieldset>
                        <legend>Upload Document</legend>
                        @Html.Partial("../PAOCOrganization/Phase1/_DocUploadApprovalForm", Model.ListOfTrxOrganizationDoc)
                    </fieldset>
                }
                @* isiin nanti dengan upload yang per act beda *@
                @if (isStatisfied == false)
                {
                    <fieldset>
                        <legend>Upload Document</legend>
                        @Html.Partial("../PAOCOrganization/Phase4/_UploadDocDynamicApprovalForm", Model.ListOfTrxOrganizationDocCertification)
                    </fieldset>
                }
                <fieldset>
                    <legend>Notes</legend>
                    <div class="row">
                        <div class="col-xs-12">
                            @Html.TextAreaFor(model => model.Notes, new { @Class = "from-control col-xs-12" })
                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend>Logs</legend>
                    <div class="row">
                        <div class="col-xs-12">
                            @Html.Partial("../PAOCOrganization/Phase1/_LogNotesApprovalForm", Model.ListOfTrxOrganizationNotes)
                        </div>
                    </div>
                </fieldset>
                <div class="form-actions">
                    <button class="btn btn-primary" id="id_submit" value="submit" name="btn_submit" type="submit">Submit</button>
                    <button class="btn btn-default" id="id_save" value="save" name="btn_submit" type="submit">Revise</button>
                    <a href="@Url.Action("Index","Home")" class="btn btn-danger">Cancel</a>
                </div>

            </div>
        }
    </div>
</div>
<script>
    $(function () {
        $('.date-picker').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true
        });

        $('#addCertificationTeamDesignated').click(function (e) {
            addRow(e, 'SampleCertificationTeamDesignatedViewModel');
        });

        //$('div').on("click", "a.airline-type-detail-remove-row", function (e) {
        //    e.preventDefault();

        //    var trRemove = $(this).parent().parent().attr('id');
        //    var trIndexId = trRemove.match(/\d+/);

        //    RemoveRow(e, 'TrxOrganizationAirlineTypeViewModel', trIndexId);

        //    return false;
        //});

        function addRow(e, tableName) {
            e.preventDefault();

            var trLast = $('#' + tableName).find("tr:last");
            var trNew = $('#' + tableName + '_0').clone();
            var suffix = $('#' + tableName + ' > tr').length;
            var isSelected = true;

            if (suffix > 1) {
                $.each($('#' + tableName).find("tr > td > select"), function (i, val) {
                    if (i > 0 && $(this).val() == '') isSelected = false;
                });
            }

            if (isSelected) {
                var oldNTr = trNew.attr('id');
                var newNTr = oldNTr.replace('_0', '_' + suffix);

                $('#' + tableName + '_0').hide();

                trNew.attr('id', newNTr);
                trNew.removeAttr('style');

                $.each(trNew.find('td'), function (i, val) {
                    var compObject = $(this).children('[id*=' + tableName + '_]');
                    var compName = compObject.attr('name');
                    var compID = compObject.attr('id');

                    if (typeof compName != 'undefined') {
                        compName = compName.replace('[0]', '[' + parseInt(suffix) + ']');
                        compObject.attr('name', compName);
                        if (compObject.is('select'))
                            compObject.addClass('required-value-dropdown');
                        else
                            compObject.addClass('required');
                    }

                    if (typeof compID != 'undefined') {
                        compID = compID.replace('_0_', '_' + parseInt(suffix) + '_');

                        compObject.attr('id', compID);
                        if (!(suffix == 1 && compObject.hasClass('certification-team-designated-remove-row'))) compObject.removeClass('invisible');
                    }
                });

                trLast.after(trNew);

                GetPersonnelCertificationTeamDesignated(tableName, suffix);
                GetPositionCertificationTeamDesignated(tableName, suffix);
            }
        }

        function RemoveRow(e, tableName, indexId) {
            e.preventDefault();

            $("#" + tableName + '_' + indexId).remove();

            var trName = $('#' + tableName + ' > tr').length;

            if (trName == 1) $('#' + tableName + '_0').show();

            return false;
        }

        
    });
</script>
