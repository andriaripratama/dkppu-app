@model IEnumerable<DKUPPU.ViewModels.TrxLicCompetencyCheckViewModel>
@{
    Layout = null;
}
<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Ratting</th>
                <th>Date Of Checks</th>
                <th>Valid Until</th>
            </tr>
        </thead>
        <tbody id="TrxLicCompetencyCheckViewModel">
            @{
                int j = 0;
                string vreadonly = "";
                string vrequered = "";
                string datepicker = "";
                string skill07 = "";
                string checked_date = "";
                string expired_date = "";
                
            }
            @foreach (DKUPPU.ViewModels.TrxLicCompetencyCheckViewModel item in Model.OrderBy(a => a.updated_date))
            {
                vreadonly = "readonly='readonly'";
                vrequered = "";
                datepicker = "";
                skill07 = "";
                checked_date = "";
                expired_date = "";
                if (item.is_history == false || item.is_history == null)
                {
                    vreadonly = "";
                    vrequered = "required-value";
                    skill07 = "SKILL07";
                    datepicker = "date-picker";
                    checked_date = "checked-date";
                    expired_date = "expired-date";
                }
                <tr id="TrxLicCompetencyCheckViewModel_@j" class="old-tr">
                    <td>
                        <input type="hidden" name="TrxLicCompetencyCheckViewModel[@j].id_rating" id="TrxLicCompetencyCheckViewModel_@j.ToString()__id_rating" required="required" value="@Html.DisplayFor(a => item.id_rating)">
                        <input type="hidden" name="TrxLicCompetencyCheckViewModel[@j].id_trx_lic_competency_check" id="TrxLicCompetencyCheckViewModel_@j.ToString()__id_trx_lic_competency_check" value="@Html.DisplayFor(a => item.id_trx_lic_competency_check)">

                        @if (item.is_history == false || item.is_history == null)
                        {
                            <input type="text" class="form-control @vrequered" name="TrxLicCompetencyCheckViewModel[@j].rating" id="TrxLicCompetencyCheckViewModel_@j.ToString()__rating" readonly="readonly">
                        }
                        else
                        {
                            <input type="hidden" name="TrxLicCompetencyCheckViewModel[@j].rating" id="TrxLicCompetencyCheckViewModel_@j.ToString()__rating" value="@Html.DisplayFor(a => item.rating)">
                            <input type="text" class="form-control copetency_type_rating" name="TrxLicCompetencyCheckViewModel[@j].id_rating_value" id="TrxLicCompetencyCheckViewModel_@j.ToString()__id_rating_value" value="@Html.DisplayFor(a => item.rating)" @vreadonly>
                        }
                    </td>
                    <td>
                        <input type="text" class="form-control @vrequered @skill07 date-skill07 @checked_date" name="TrxLicCompetencyCheckViewModel[@j].checked_date" id="TrxLicCompetencyCheckViewModel_@j.ToString()__checked_date" value="@Html.DisplayFor(a => item.checked_date)" @vreadonly>
                    </td>
                    <td>
                        <input type="text" class="form-control @vrequered  @datepicker date-field @expired_date" name="TrxLicCompetencyCheckViewModel[@j].expired_date" id="TrxLicCompetencyCheckViewModel_@j.ToString()__expired_date" value="@Html.DisplayFor(a => item.expired_date)" @vreadonly>
                    </td>
                </tr>
                        j++;
            }
        </tbody>

    </table>
</div>
@if (ViewBag.HistoryOfTypeAircraftCom != null)
{
    @Html.DropDownList("dropdown-typerating-com", (IEnumerable<SelectListItem>)ViewBag.HistoryOfTypeAircraftCom, "Select Type Aircraft :", new { @class = "form-control copetency_type_rating", id = "dropdown-typerating-com", @style = "display:none" })

}

<script>

    $(function () {
        // datepicker
        $('.date-picker').datepicker({
            //options
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            //...
        });
        var VSKILL07 = $('#val-SKILL07').attr('data-date');

        $('.SKILL07').datepicker({
            //options
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            minDate: VSKILL07,
            //...
        });
        $('div').on('change', 'select.copetency_type_rating', function (e) {
            e.preventDefault();
            var id = $(this).attr('id');
            var itemText = $('#' + id + ' option:selected').text();
            var itemValue = $(this).val();
            var index = parseInt($(this).attr('name').match(/\d+/));
            $('#TrxLicCompetencyCheckViewModel_' + index + '__rating').val(itemText);
            $('#TrxLicCompetencyCheckViewModel_' + index + '__id_rating').val(itemValue);
        });

        $('div').on('click', 'a.add-competency', function (e) {
            e.preventDefault();
            var $competency = $('#TrxLicCompetencyCheckViewModel');

            addRowTrxLicCompetencyCheckViewModel(e, $competency);

            DisabledKeyboard();
        });

        $('div').on("click", "a.remove-competency", function (e) {
            var $tabelData = $('#TrxLicCompetencyCheckViewModel');
            removeRowTrxLicCompetencyCheckViewModel(e, $tabelData);
        });

        function addRowTrxLicCompetencyCheckViewModel(e, $tabelData) {
            e.preventDefault();
            var $trLast = $tabelData.find("tr:last");
            var trLenght = $tabelData.find('tr.new-tr').length;
            if (parseInt(trLenght) < 1) {
                var $trNew = $trLast.clone();

                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);

                $trNew.removeClass('old-tr');
                $trNew.addClass('new-tr');

                var oldNTr = $trNew.attr('id');
                var newNTr = oldNTr.replace('_' + suffix, '_' + (parseInt(suffix) + 1));
                $trNew.attr('id', newNTr);
                $.each($trNew.find(':input'), function (i, val) {

                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);

                    // Replaced ID
                    var oldID = $(this).attr('id');
                    var newID = oldID.replace('_' + suffix + '_', '_' + (parseInt(suffix) + 1) + '_');
                    $(this).attr('id', newID);

                    $(this).val('');
                    $(this).removeClass("input-validation-error");
                    $(this).removeAttr('readonly');
                    $(this).removeAttr('disabled');
                });

                $.each($trNew.find(':input.copetency_type_rating'), function (i, val) {
                    var name = $(this).attr('name');
                    var id = $(this).attr('id');
                    var $dropdown = $('#dropdown-typerating-com');
                    $dropdown.removeAttr('style');
                    //$dropdown.addClass('required-value-dropdown');
                    $dropdown.attr('name', name);
                    $dropdown.attr('id', id);
                    $(this).after($dropdown);
                    $(this).remove();
                });
                $.each($trNew.find(':input.date-field'), function (i, val) {
                    $(this).removeClass('hasDatepicker');
                    $(this).datepicker({
                        //options
                        dateFormat: 'dd/mm/yy',
                        changeMonth: true,
                        changeYear: true
                    });                    
                });
                $.each($trNew.find('.date-skill07'), function (i, val) {
                    $(this).removeClass('hasDatepicker');
                    $(this).datepicker({
                        //options
                        dateFormat: 'dd/mm/yy',
                        changeMonth: true,
                        changeYear: true,
                        minDate: VSKILL07,
                    });
                });
                $trLast.after($trNew);

            }
        }

        function removeRowTrxLicCompetencyCheckViewModel(e, $tabelData) {
            e.preventDefault();
            var trLenght = $tabelData.find('tr.new-tr').length;
            if (parseInt(trLenght) == 1) {
                var trTodelete = $tabelData.find('tr.new-tr');
                trTodelete.remove();
            }
        }

        function DisabledKeyboard() {
            $('input[class*=hasDatepicker').each(function () {
                $(this).keypress(function (e) {
                    var key = e.charCode || e.keyCode;

                    if (key == 13) {
                        // enter key do nothing
                    }
                    else {
                        e.preventDefault();
                    }
                });

                $(this).keydown(function (e) {
                    var key = e.charCode || e.keyCode;

                    if (key == 13) {
                        // enter key do nothing
                    }
                    else {
                        e.preventDefault();
                    }
                });

                $(this).keyup(function (e) {
                    var key = e.charCode || e.keyCode;

                    if (key == 13) {
                        // enter key do nothing
                    }
                    else {
                        e.preventDefault();
                    }
                });
            });

            $(':input.date-field').each(function () {
                $(this).keypress(function (e) {
                    var key = e.charCode || e.keyCode;

                    if (key == 13) {
                        // enter key do nothing
                    }
                    else {
                        e.preventDefault();
                    }
                });

                $(this).keydown(function (e) {
                    var key = e.charCode || e.keyCode;

                    if (key == 13) {
                        // enter key do nothing
                    }
                    else {
                        e.preventDefault();
                    }
                });

                $(this).keyup(function (e) {
                    var key = e.charCode || e.keyCode;

                    if (key == 13) {
                        // enter key do nothing
                    }
                    else {
                        e.preventDefault();
                    }
                });
            });

            $(':input.date-skill07').each(function () {
                $(this).keypress(function (e) {
                    var key = e.charCode || e.keyCode;

                    if (key == 13) {
                        // enter key do nothing
                    }
                    else {
                        e.preventDefault();
                    }
                });

                $(this).keydown(function (e) {
                    var key = e.charCode || e.keyCode;

                    if (key == 13) {
                        // enter key do nothing
                    }
                    else {
                        e.preventDefault();
                    }
                });

                $(this).keyup(function (e) {
                    var key = e.charCode || e.keyCode;

                    if (key == 13) {
                        // enter key do nothing
                    }
                    else {
                        e.preventDefault();
                    }
                });
            });
        }
    });
</script>


