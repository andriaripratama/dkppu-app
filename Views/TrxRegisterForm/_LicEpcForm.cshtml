@model List<DKUPPU.ViewModels.TrxLicEpcViewModel>
@{
    Layout = null;
}
<div class="table-responsive">
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Level</th>

                <th>Date of Exam</th>

                <th>Expiry Date</th>
            </tr>
        </thead>
        <tbody id="table-epc">
            @{
                int j = 0;
                string vreadonly = "";
                string vrequered = "";
                string datepicker = "";
                string from_date = "";
                string until_date = "";
            }
            @foreach (DKUPPU.ViewModels.TrxLicEpcViewModel item in Model)
            {
                vreadonly = "readonly='readonly'";
                vrequered = "";
                datepicker = "";
                from_date = "";
                until_date = "";
                if (item.is_history == false || item.is_history == null)
                {
                    vreadonly = "";
                    vrequered = "required-value";
                    from_date = "from-date";
                    until_date = "until-date";
                    datepicker = "date-picker";
                }
                
                    

                <tr id="tr-@j" class="old-tr">
              
                    <td>
                        <select name="TrxLicEpcViewModel[@j].level" id="TrxLicEpcViewModel_@j.ToString()__level" class="form-control required-value" value="@Html.DisplayFor(m => m[j].level)" @vreadonly>

                            <option value="">- Please select a level -</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>

                        </select>

                        @*<input type="text" name="TrxLicEpcViewModel[@j]m m es.level" id="TrxLicEpcViewModel_@j.ToString()__level" class="form-control required-value" value="@Html.DisplayFor(m => m[j].level)" @vreadonly>
                        <input type="hidden" name="TrxLicEpcViewModel[@j].id_trx_lic_epc" id="TrxLicEpcViewModel_@j.ToString()__id_trx_lic_epc" value="@Html.DisplayFor(m => m[j].id_trx_lic_epc)">*@
                   

                     </td>
                    <td>
                        <input type="text" name="TrxLicEpcViewModel[@j].date_of_exam" id="TrxLicEpcViewModel_@j.ToString()__date_of_exam" class="form-control @vrequered date-filed @from_date @datepicker" value="@Html.DisplayFor(m => m[j].date_of_exam)" @vreadonly>
                    </td>
                    <td>
                        <input type="text" name="TrxLicEpcViewModel[@j].expiry_date" id="TrxLicEpcViewModel_@j.ToString()__expiry_date" class="form-control @vrequered date-filed @until_date @datepicker" value="@Html.DisplayFor(m => m[j].expiry_date)" @vreadonly>
                    </td>
                </tr>
                j++;
            }
        </tbody>
    </table>
</div>
<script>
    $(function () {
        $('#add-epc').click(function (e) {
            var $tabelData = $('#table-epc');
            addRow(e, $tabelData);
        });
        $('div').on("click", "a.remove-epc", function (e) {
            var $tabelData = $('#table-epc');
            Remove(e, $tabelData);
        });
        function addRow(e, $tabelData) {
            e.preventDefault();
            var trLenght = $tabelData.find('tr.new-tr').length;
            if (parseInt(trLenght) < 1) {
                var $trLast = $tabelData.find("tr:last");
                var $trNew = $trLast.clone();

                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                var oldNTr = $trNew.attr('id');
                var newNTr = oldNTr.replace('-' + suffix, '-' + (parseInt(suffix) + 1));
                $trNew.attr('id', newNTr);
                $trNew.removeClass('old-tr');
                $trNew.addClass('new-tr');
                $.each($trNew.find(':input'), function (i, val) {

                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);

                    // Replaced ID
                    var oldID = $(this).attr('id');
                    var newID = oldID.replace('_' + suffix + '_', '_' + (parseInt(suffix) + 1) + '_');
                    $(this).attr('id', newID);

                    $(this).val('');
                    $(this).removeAttr('readonly');
                });
                $.each($trNew.find('.date-filed'), function (i, val) {
                    $(this).removeClass('hasDatepicker');
                    $(this).datepicker({
                        //options
                        dateFormat: 'dd/mm/yy',
                        changeMonth: true,
                        changeYear: true,
                        //...
                    });
                });

                $trLast.after($trNew);
            }

        }

        function Remove(e, $tabelData) {
            e.preventDefault();
            var trLenght = $tabelData.find('tr.new-tr').length;
            if (parseInt(trLenght) == 1) {
                var trTodelete = $tabelData.find('tr.new-tr');
                trTodelete.remove();
            }
        }
    });
</script>


