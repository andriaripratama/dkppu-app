@model DKUPPU.ViewModels.WTIApprovalViewModel
@{
    ViewBag.Title = "Written Exam Approval";
    ViewBag.wf_activity_name = Model.wf_activity_name;
}
@if (Model.wf_activity_name == "ACTV")
{
    <style>
        input {
            background-color: transparent !important;
            border: none !important;
        }
    </style>
}

<div class="jarviswidget jarviswidget-sortable" data-widget-editbutton="false" data-widget-colorbutton="false" role="widget">
    <header>
        <span class="widget-icon"><i class="fa fa-eye"></i></span>
        <h2>
            @if (Model.wf_activity_name == "ACTE")
            {
                <text>Edit Form</text>
            }
            else
            {
                <text>Approval Form</text>
            }
        </h2>
        <span class="jarviswidget-loader">
            <i class="fa fa-refresh fa-spin"></i>
        </span>
    </header>
    <div role="content">
        <div class="jarviswidget-editbox"> </div>
        <div class="widget-body">

            <!--Data Applicant Begin-->
            @Html.Partial("../MstRegisterForm/_DataApplicantForm", Model.Applicant)

            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.wf_activity_name)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.id_trx_license)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.id_applicant)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.id_license_category)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.id_license_type)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.id_sop_type)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.reg_no)
                @Html.HiddenFor(model => model.TrxWfViewModel.sn)
                @Html.HiddenFor(model => model.TrxLicenseViewModel.created_by)
                @Html.HiddenFor(model => model.Applicant.job_name)
                @Html.HiddenFor(model => model.Applicant.full_name)
                @Html.HiddenFor(model => model.TrxLicWrittenExamViewModel.id_trx_lic_written_exam)



                <div class="row">
                    <div class="col-xs-6">
                        <fieldset>
                            <legend>License Detail</legend>
                            @Html.DisplayFor(model => model.id_sop_type_value)
                        </fieldset>
                    </div>
                </div>

                @*<div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-2 text-left"></label>
                        <div class="col-md-10">
                            @{ string vchecked = ""; }
                            @foreach (var item in (IEnumerable<DKUPPU.ViewModels.MstLookupViewModel>)ViewBag.license_type_exam)
                            {
                                vchecked = "";
                                if (item.id_lookup == Model.TrxLicWrittenExamViewModel.license_type) { vchecked = "checked"; }
                                <label class="radio radio-inline">
                                    <input id="TrxLicWrittenExamViewModel.license_type" type="radio" class="radio-license-type-exam radiobox" name="license_type" value="@Html.DisplayFor(a=>item.id_lookup)" @vchecked />
                                    <span>@Html.DisplayFor(a => item.lookup_value)</span>
                                </label>
                            }
                        </div>
                    </div>
                </div>*@

                <div>
                    @Html.Partial("../MstRegisterForm/_WrittenExamForm", Model.TrxLicWrittenExamViewModel)
                </div>
                @*if (!string.IsNullOrEmpty(Model.TrxLicWrittenExamViewModel.exam_type))
                {
                    <script>
                        $(function () {
                            $('#TrxLicWrittenExamViewModel_exam_type option[value=@Model.TrxLicWrittenExamViewModel.exam_type]').attr('selected', 'selected');
                        });
                    </script>
                }*@
                if (Model.TrxLicWrittenExamViewModel.is_have_license == true)
                {
                    <script>
                        $(function () {
                            $('#TrxLicWrittenExamViewModel_is_have_license').prop("checked", true);
                            $('#TrxLicWrittenExamViewModel_license_name').removeAttr("readonly");
                            $('#is_have_license').val(true);
                        })
                    </script>
                }

                if (ViewBag.UploadDocumentForm == true)
                {
                    <fieldset>
                        <legend>Upload Document</legend>
                        @Html.Partial("../MstApprovalForm/_DocUploadForm", Model.MstDocUploadViewModel)
                    </fieldset>

                }
                if (ViewBag.ExpiredLicense == true)
                {
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="form-horizontal">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TrxLicenseViewModel.lic_expired_date, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(model => model.TrxLicenseViewModel.lic_expired_date, new { @class = "form-control date-picker" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                if (ViewBag.GenerateLicense == true)
                {
                    <div class="row">
                        <div class="col-xs-12">
                            @Html.Partial("../MstApprovalForm/_GenerateLicenseNumber", Model.TrxLicenseViewModel)
                        </div>
                    </div>
                }

                if (ViewBag.CreateNote != false)
                {
                    <fieldset>
                        <legend>Notes</legend>
                        <div class="row">
                            <div class="col-xs-12">
                                @Html.TextAreaFor(model => model.Notes, new { @Class = "from-control col-xs-12" })
                            </div>
                        </div>
                    </fieldset>
                }
                <fieldset>
                    <legend>Logs</legend>
                    @Html.Partial("../MstApprovalForm/_LogNotesForm", Model.TrxLicenseNotesViewModel)
                </fieldset>

                if (ViewBag.UploadLicenseScan == true)
                {
                    <div class="row">
                        <div class="col-xs-12">
                            <fieldset>
                                <legend>Upload Result</legend>
                                @Html.Partial("../MstApprovalForm/_UploadLicenseScan", Model.TrxLicenseUploadViewModel)
                            </fieldset>
                        </div>
                    </div>
                    <script>
                        $('#TrxLicenseUploadViewModel_license_no').hide();
                    </script>
                }
                if (ViewBag.CheckingRegNo == true)
                {
                    <div class="row">
                        <div class="col-xs-12">
                            @Html.Partial("../MstApprovalForm/_CheckingRegistrationNumber", Model.TrxLicenseUploadViewModel)
                        </div>
                    </div>
                }

                <div class="form-actions">
                    <button id="submit" class="btn btn-primary" type="submit"> Submit </button>
                    <a href="@Url.Action("Index","Home")" class="btn btn-default"> Back </a>
                </div>
            }
            <!--End Form-->

        </div>
    </div>
</div>
<script>
    $(function () {

        $('#TrxLicWrittenExamViewModel_is_have_license').click(function () {
            if ($(this).is(':checked')) {
                $('#is_have_license').val(true);
                $('#TrxLicWrittenExamViewModel_license_name').removeAttr('readonly');
            } else {
                $('#TrxLicWrittenExamViewModel_license_name').attr('readonly', 'readonly');
                $('#is_have_license').val(false);
            }
        });

        $('.radio-license-type-exam').click(function () {
            $.ajax({
                url: '@Url.Action("GetExamTypeList", "AJAX")',
                data: {
                    lookup_group: $(this).val(),
                },
                dataType: 'json',
                success: function (data) {
                    $('#TrxLicWrittenExamViewModel_exam_type').empty();
                    $('#TrxLicWrittenExamViewModel_exam_type').append('<option value="">Select Exam.</option>');
                    $.each(data, function (i, data) {
                        $('#TrxLicWrittenExamViewModel_exam_type').append('<option value="' + data.id_lookup + '">' + data.lookup_value + '</option>');
                    });
                }
            });
        });

        var hasError = 0;

        //Add Item
        $('form').submit(function () {
            //return false;
            $form = $('form:first');
            var value = $(this).val();

            //validasi file type
            $.each($form.find('input[type="file"]'), function (i, val) {
                if (!FileValidation($(this))) {
                    hasError = hasError + 1;
                }
                if (!FileSize($(this))) {
                    hasError = hasError + 1;
                }
            });

            //validasi is required
            $.each($form.find('.required-value'), function (i, val) {
                if (!IsRequired($(this))) {
                    hasError = hasError + 1;
                }
            });

            if ($form.find('.has-error').length > 0 || hasError > 0) {
                return false;
            }
        });

        //Validasi type doc
        $('input[type="file"]').on("change", function () {
            if (FileValidation($(this))) {
                FileSize($(this));
            }
        });

        function IsRequired(object) {
            var IsValid = true;
            $(object).parent().find('span').remove();
            $(object).parent().removeClass('has-error');
            $(object).parent().removeClass('has-success');
            var value = $(object).val();
            if (value.length <= 0) {
                $(object).after('<span class="help-block">Is required.</span>');
                $(object).parent().addClass('has-error');
                IsValid = false;
            }
            else {
                $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                $(object).parent().addClass('has-success');
                IsValid = true;
            }
            return IsValid;
        }

        function FileValidation(object) {
            var IsValid = true;

            var allowedExtensions = ["jpg", "pdf", "png"];

            var value = $(object).val(),
                        file = value.toLowerCase(),
                        extension = file.substring(file.lastIndexOf('.') + 1);
            if ($(object).val().length > 0) {

                $(object).parent().find('span').remove();
                $(object).parent().removeClass('has-error');
                $(object).parent().removeClass('has-success');

                if ($.inArray(extension, allowedExtensions) == -1) {
                    $(object).after('<span class="help-block">Invalid File. Please upload a File with extension: ' + allowedExtensions.join(", ") + '</span>');
                    $(object).parent().addClass('has-error');
                    IsValid = false;
                } else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }
        // validasi file size document upload
        function FileSize(object) {
            var IsValid = true;
            if ($(object).val().length > 0) {
                $(object).parent().find('span').remove();
                $(object).parent().removeClass('has-error');
                $(object).parent().removeClass('has-success');
                var file = $(object)[0].files[0];
                var maxFileSize = $('#DocUploadFormFileSize').val();

                if (file.size > parseInt(maxFileSize) || file.FileSize > parseInt(maxFileSize)) {
                    $(object).after('<span class="help-block">The file size to big</span>');
                    $(object).parent().addClass('has-error');
                    IsValid = false;
                } else {
                    $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                    $(object).parent().addClass('has-success');
                    IsValid = true;
                }
            }
            return IsValid;
        }

        function IsRequired(object) {
            var IsValid = true;
            $(object).parent().find('span').remove();
            $(object).parent().removeClass('has-error');
            $(object).parent().removeClass('has-success');
            var value = $(object).val();
            if (value.length <= 0) {
                $(object).after('<span class="help-block">Is required.</span>');
                $(object).parent().addClass('has-error');
                IsValid = false;
            }
            else {
                $(object).after('<span class="form-control-feedback pull-left"><i class="fa fa-check"></i></span>');
                $(object).parent().addClass('has-success');
                IsValid = true;
            }
            return IsValid;
        }

    });
</script>